<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2022-10-24T07:00:00Z</updated>
  <entry>
    <title>This Week in Spring - October 25th, 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/24/this-week-in-spring-october-25th-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-10-25:4966</id>
    <updated>2022-10-24T07:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! When last we spoke, I was in Las Vegas, NV, for the JavaOne show. It was &lt;em&gt;amazing&lt;/em&gt;! I&amp;rsquo;m in sunny Singapore, then off to Malaysia and Thailand. It&amp;rsquo;s the first time I&amp;rsquo;ve been to any of these places since 2019! How good it is to be back! I&amp;rsquo;ve so missed it.&lt;/p&gt;
&lt;p&gt;The Spring team is busy preparing for both Spring Boot 3 (and the Spring Framework 6 release that underpins it) and SpringOne 2022. Have you booked your ticket for SpringOne 2022 yet? It&amp;rsquo;s going to be held in sunny San Francisco, and - of course - it&amp;rsquo;ll be the absolute best place to learn about Spring Framework 6, Spring Boot 3, GraalVM, the new Ahead-of-time compilation engine in Spring Boot 3, and more. Also, it&amp;rsquo;s a rare chance to hang out with the Spring team proper. It&amp;rsquo;s been years since any of us has had the chance to do that, myself included! Don&amp;rsquo;t miss this! Register now, and get a $200 discount using the following code: &lt;code&gt;S1VM22_Advocate_200&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, the full content schedule is now available online! &lt;a href="https://springone.io"&gt;Check it out&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Anyway, with that out of the way, we&amp;rsquo;ve got a &lt;em&gt;lot&lt;/em&gt; to cover this week, so let&amp;rsquo;s dive right into it!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/20/a-bootiful-podcast-microsoft-s-asir-selvasingh-on-azure-spring-apps-java-at-microsoft-application-security-and-more"&gt;A Bootiful Podcast: Microsoft&amp;rsquo;s Asir Selvasingh on Azure Spring Apps, Java at Microsoft, application security, and more&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This one is especially important: &lt;a href="https://spring.io/blog/2022/10/20/cve-2022-31684-reactor-netty-http-server-may-log-request-headers"&gt;CVE-2022-31684: Reactor Netty HTTP Server may log request headers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LjUbSiIWUNw"&gt;Deploy Your Spring Boot (Java) Apps To Production In Seconds! - YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://feeds.feedblitz.com/~/716762110/0/baeldung~Guide-to-Simple-Binary-Encoding"&gt;Guide to Simple Binary Encoding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://develotters.com/posts/high-cardinality/"&gt;High Cardinality - DevelOtters.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://feeds.feedblitz.com/~/715972472/0/baeldung~How-to-Resolve-Spring-Webflux-DataBufferLimitException"&gt;How to Resolve Spring Webflux DataBufferLimitException&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.jetbrains.com/idea/2022/06/intellij-idea-2022-2-eap-5/"&gt;IntelliJ IDEA 2022.2 EAP 5: Support for Spring 6 and Spring Boot 3 Features, Enhanced HTTP Client, Kubernetes Updates and More &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/21/introducing-spring-modulith"&gt;Introducing Spring Modulith&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/20/spring-batch-5-0-rc1-is-out"&gt;Spring Batch 5.0 RC1 is out!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/20/spring-boot-2-6-13-available-now"&gt;Spring Boot 2.6.13 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/20/spring-boot-2-7-5-available-now"&gt;Spring Boot 2.7.5 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/20/spring-boot-3-0-0-rc1-available-now"&gt;Spring Boot 3.0.0-RC1 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/@raviyasas/spring-boot-best-practices-for-developers-3f3bdffa0090"&gt;Spring Boot Best Practices for Developers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/20/spring-framework-6-0-0-rc2-available-now"&gt;Spring Framework 6.0.0-RC2 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-security-5-7-4-and-5-6-8-available-now"&gt;Spring Security 5.7.4 and 5.6.8 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-security-6-0-0-rc1-and-5-8-0-rc1-are-released"&gt;Spring Security 6.0.0-RC1 and 5.8.0-RC1 are released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-web-services-4-0-0-rc1-is-out"&gt;Spring Web Services 4.0.0-RC1 is out!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-for-graphql-1-1-0-rc1-released"&gt;Spring for GraphQL 1.1.0-RC1 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Introducing Spring Modulith</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/21/introducing-spring-modulith" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Oliver Drotbohm</name>
    </author>
    <id>tag:spring.io,2022-10-21:4964</id>
    <updated>2022-10-21T12:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;When designing software systems, architects and developers have plenty of architectural options to choose from. Microservice-based systems have become ubiquitous in the last couple of years. However, the idea of monolithic, modular systems has also regained popularity recently.
Independent of the architectural style ultimately selected, the individual applications comprising the overall system need their structure to be evolvable and able to follow changes in business requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Traditionally, application frameworks have provided structural guidance by providing abstractions aligned with technical concepts, such as Spring Framework’s stereotype annotations (&lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt;, and so on).
However, shifting the focus to &lt;a href="https://dannorth.net/2022/02/10/cupid-for-joyful-coding/#domain-based"&gt;align code structure with the domain&lt;/a&gt; has proven to lead to better structured applications that are ultimately more understandable and maintainable.
Until now, the Spring team has given verbal and written guidance on how we recommend structuring your Spring Boot applications.
We decided that we can do more than that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-modulith"&gt;&lt;em&gt;Spring Modulith&lt;/em&gt;&lt;/a&gt; is a new, experimental Spring project that supports developers in expressing these logical application modules in code and in building well-structured, domain-aligned Spring Boot applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="example"&gt;&lt;a class="anchor" href="#example"&gt;&lt;/a&gt;An Example&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Let us have a look at &lt;a href="https://github.com/spring-projects-experimental/spring-modulith/tree/main/spring-modulith-example"&gt;a concrete example&lt;/a&gt;.
Assume we need to develop an e-commerce application, for which we start with two logical modules.
An &lt;em&gt;order&lt;/em&gt; module deals with order processing, and an &lt;em&gt;inventory&lt;/em&gt; keeps track of the stock for the products we sell.
Our primary focus for this post is the use case that the inventory needs to be updated once an order is completed.
Our project structure would look something like this (&lt;code&gt;○&lt;/code&gt; denotes a public type, &lt;code&gt;-&lt;/code&gt; a private one):&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;□ Example
└─ □ src/main/java
   ├─ □ example
   |  └─ ○ Application.java
   |
   ├─ □ example.inventory
   |  ├─ ○ InventoryManagement.java
   |  └─ - InventoryInternal.java
   |
   ├─ □ example.order
   |  └─ ○ OrderManagement.java
   └─ □ example.order.internal
      └─ ○ OrderInternal.java&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This arrangement starts with the usual skeleton, a base package that contains the Spring Boot application class.
Our two business modules are reflected by direct sub-packages: &lt;code&gt;inventory&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt;.
The inventory uses a rather simple arrangement.
It consists of only a single package. Thus, we can use Java visibility modifiers to hide internal components from access by code residing in other modules, such as &lt;code&gt;InventoryInternal&lt;/code&gt;, as the Java compiler restricts access to non-public types.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;order&lt;/code&gt; package, on the contrary, contains a sub-package that exposes a Spring bean which&amp;#8212;&amp;#8203;in our case&amp;#8212;&amp;#8203;needs to be public, because &lt;code&gt;OrderManagement&lt;/code&gt; refers to it.
This arrangement of types, unfortunately, rules out the compiler as a helper to prevent illegal access to &lt;code&gt;OrderInternal&lt;/code&gt;, because, in plain Java, packages are not hierarchical.
A sub-package is not hidden inside a parent one.
Spring Modulith, however, establishes the notion of &lt;em&gt;application modules&lt;/em&gt;, that&amp;#8212;&amp;#8203;by default&amp;#8212;&amp;#8203;consist of an API package (the ones directly located under the application&amp;#8217;s main package&amp;#8212;&amp;#8203;in our case &lt;code&gt;inventory&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt;) and, optionally, nested ones (&lt;code&gt;order.internal&lt;/code&gt;).
The latter are considered internal, and the code residing in those modules is inaccessible to other modules.
This application module model can &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#fundamentals.customizing-modules"&gt;be tweaked&lt;/a&gt; to your liking, but let us stick with this default arrangement for this post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="verification"&gt;&lt;a class="anchor" href="#verification"&gt;&lt;/a&gt;Verifying the Modular Structure&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To verify the application&amp;#8217;s structure and that our code adheres to the structures we defined, we can create a test case that creates an &lt;code&gt;ApplicationModules&lt;/code&gt; instance:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;class ModularityTests {

  @Test
  void verifyModularity() {
    ApplicationModules.of(Application.class).verify();
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Assuming &lt;code&gt;InventoryManagement&lt;/code&gt; introduced a dependency on &lt;code&gt;OrderInternal&lt;/code&gt;, that test would fail with the following error message and, thus, break the build:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;- Module 'inventory' depends on non-exposed type ….internal.OrderInternal within module 'order'!
InventoryManagement declares constructor InventoryManagement(InventoryInternal, OrderInternal) in (InventoryManagement.java:0)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The initial step (&lt;code&gt;ApplicationModules.of(…)&lt;/code&gt;) inspects the application structure, applies the module conventions and analyzes which parts of each application module are part of their &lt;em&gt;provided interface&lt;/em&gt;.
As &lt;code&gt;OrderInternal&lt;/code&gt; does not reside in the application module&amp;#8217;s API package, the reference to it from the &lt;code&gt;inventory&lt;/code&gt; module is considered invalid and, thus, is reported as such in the next step, the invocation of &lt;code&gt;….verify()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The verification as well as the underlying analysis of the application module model are implemented by using &lt;a href="https://www.archunit.org/"&gt;ArchUnit&lt;/a&gt;.
It will reject cyclic dependencies between application modules, access to types considered internal (as per the definition above), and, optionally, allow only references to modules explicitly allow-listed by using &lt;code&gt;@ApplicationModule(allowedDependencies = …)&lt;/code&gt; on the application modules &lt;code&gt;package-info.java&lt;/code&gt;.
For more information on how to define application module boundaries and allowed dependencies between them in the link, see the &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#fundamentals.modules"&gt;reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="integration-tests"&gt;&lt;a class="anchor" href="#integration-tests"&gt;&lt;/a&gt;Application Module Integration Tests&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Being able to build a model of the application’s structure is also helpful for integration testing.
Similar to Spring Boot&amp;#8217;s slice test annotations, developers can indicate that they want to include only the components and configuration for a particular application module by using Spring Modulith&amp;#8217;s &lt;code&gt;@ApplicationModuleTest&lt;/code&gt; on an integration test.
This helps to isolate integration tests against changes and the potential failures of tests located in other modules.
An integration test class would look something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;package example.order;

@ApplicationModuleTest
class OrderIntegrationTests {

  // Test methods go here
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Similar to a test case run with &lt;code&gt;@SpringBootTest&lt;/code&gt;, &lt;code&gt;@ApplicationModuleTest&lt;/code&gt; finds the application&amp;#8217;s main class annotated with &lt;code&gt;@SpringBootApplication&lt;/code&gt;.
It then initializes the application module model, finds the module the test class is located in, and defaults to bootstrap exactly that module.
If you run this class and have the log level for &lt;code&gt;org.springframework.modulith.test&lt;/code&gt; raised to &lt;code&gt;DEBUG&lt;/code&gt;, you will see output that looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;… - Bootstrapping @ApplicationModuleTest for example.order in mode STANDALONE (class example.Application)…
…
… - ## example.order ##
… - &amp;gt; Logical name: order
… - &amp;gt; Base package: example.order
… - &amp;gt; Direct module dependencies: none
… - &amp;gt; Spring beans:
… -   + ….OrderManagement
… -   + ….internal.OrderInternal
…
… - Re-configuring auto-configuration and entity scan packages to: example.order.&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The test execution reports which module is bootstrapped, its logical structure, and how it ultimately alters the Spring Boot bootstrap to include only the module&amp;#8217;s base package.
It can be &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#testing.bootstrap-modes"&gt;tweaked&lt;/a&gt; to explicitly include other application modules, or bootstrap an entire tree of modules.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="events"&gt;&lt;a class="anchor" href="#events"&gt;&lt;/a&gt;Using Events for Inter-module Interaction&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Shifting the integration testing focus towards application modules usually reveals their outgoing dependencies, typically established by references to Spring beans residing in other modules.
While those can be mocked (by using &lt;code&gt;@MockBean&lt;/code&gt;) to satisfy the test execution, it is often a better idea to replace the cross-module bean dependencies with an application event being published and consuming that with the previously explicitly invoked component.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Our example is already arranged in this preferred way, as it publishes an &lt;code&gt;OrderCompleted&lt;/code&gt; event during the call to &lt;code&gt;OrderManagement.complete(…)&lt;/code&gt;.
Spring Modulith&amp;#8217;s &lt;code&gt;PublishedEvents&lt;/code&gt; abstraction allows testing that an integration test case has caused particular application events to be published:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@ApplicationModuleTest
@RequiredArgsConstructor
class OrderIntegrationTests {

  private final OrderManagement orders;

  @Test
  void publishesOrderCompletion(PublishedEvents events) {

    var reference = new Order();

    orders.complete(reference);

    // Find all OrderCompleted events referring to our reference order
    var matchingMapped = events.ofType(OrderCompleted.class)
        .matchingMapped(OrderCompleted::getOrderId, reference.getId()::equals);

    assertThat(matchingMapped).hasSize(1);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="summary"&gt;&lt;a class="anchor" href="#summary"&gt;&lt;/a&gt;A Tool Box for Well-structured Spring Boot Applications&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Modulith provides convention and APIs to declare and verify logical modules in your Spring Boot application.
On top of the features described above, the first release has many more features to help developers structuring their applications:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support for more &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#fundamentals.modules.advanced"&gt;advanced package arrangements&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support to &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#testing.bootstrap-modes"&gt;flexibly select&lt;/a&gt; a set of application modules to include in an integration test run.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#events.publication-registry"&gt;transaction event publication&lt;/a&gt; log to let developers integrate application modules through events in transactional contexts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deriving &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#documentation"&gt;developer documentation&lt;/a&gt; from the application module structure, including C4 and UML component diagrams as well as the Application Module Canvas (a tabular high-level description of each module).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runtime &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#observability"&gt;observability&lt;/a&gt; on the application module level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#moments"&gt;Passage of Time Events&lt;/a&gt; implementation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can find more about the project in &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/"&gt;its reference documentation&lt;/a&gt; and check out the &lt;a href="https://github.com/spring-projects-experimental/spring-modulith/tree/main/spring-modulith-example"&gt;example project&lt;/a&gt;.
Despite the broad set of features already available, this is just the start of the journey.
We look forward to your feedback and feature ideas for the project.
Also, be sure to follow us &lt;a href="https://twitter.com/springmodulith"&gt;on Twitter&lt;/a&gt; for the latest social media updates on the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="about-moduliths"&gt;&lt;a class="anchor" href="#about-moduliths"&gt;&lt;/a&gt;About Moduliths&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Modulith (no trailing "s") is the continuation of the &lt;a href="https://github.com/moduliths/moduliths"&gt;Moduliths (with trailing "s") project&lt;/a&gt; but using Spring Boot 3.0, Framework 6, Java 17, and JakartaEE 9 as the baseline.
The old Moduliths project is currently available in version 1.3, is compatible with Spring Boot 2.7, and will be maintained as long as the corresponding Boot generation.
We have used the experience gained with it over the last two years, streamlined a few abstractions, tweaked a couple of defaults here and there, and decided to start with a more state-of-the-art baseline.
For more detailed guidance on how to migrate to Spring Modulith, see the Spring Modulith &lt;a href="https://docs.spring.io/spring-modulith/docs/0.1.0-M1/reference/html/#appendix.migrating-from-moduliths"&gt;reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 3.0.0-RC1 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/spring-boot-3-0-0-rc1-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2022-10-21:4963</id>
    <updated>2022-10-21T04:00:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;3.0.0-RC1&lt;/code&gt; has been released and is now available from &lt;a href="https://repo.spring.io/milestone"&gt;https://repo.spring.io/milestone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v3.0.0-RC1"&gt;135 enhancements, documentation improvements, dependency upgrades, and bug fixes&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This is our first release candidate for Spring Boot 3.0, which we expect to release November 24, 2022. We are not expecting any more features to be added at this point, and we will only be making API changes if we find issues.&lt;/p&gt;
&lt;p&gt;This release is the culmination of 11 months of work and is the first release to fully realize the themes that we set out to deliver in Spring Boot 3.0. Most notably, this release builds on the multi-year R&amp;amp;D effort that started with the experimental Spring Native project to provide support for GraalVM native images.&lt;/p&gt;
&lt;p&gt;You can now convert your Spring Boot applications to native executables using the standard Spring Boot Maven or Gradle plugins without needing any special configuration.&lt;/p&gt;
&lt;p&gt;This release also provides a &lt;a href="https://docs.spring.io/spring-boot/docs/3.0.0-RC1/reference/html/native-image.html#native-image"&gt;new section in the reference documentation&lt;/a&gt; that explains the &lt;a href="https://docs.spring.io/spring-boot/docs/3.0.0-RC1/reference/html/native-image.html#native-image.introducing-graalvm-native-images.understanding-aot-processing"&gt;concepts behind ahead-of-time processing&lt;/a&gt; and how you can &lt;a href="https://docs.spring.io/spring-boot/docs/3.0.0-RC1/reference/html/native-image.html#native-image.developing-your-first-application"&gt;get started generating your first GraalVM native image&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In addition to GraalVM native image support, this release also completes our migration to JakartaEE 9 and our baseline upgrade to Java 17.&lt;/p&gt;
&lt;p&gt;Other notable new features in this release include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;More Flexible Auto-configuration for Spring Data JDBC&lt;/li&gt;
  &lt;li&gt;Auto-Configuration for Prometheus Exemplars&lt;/li&gt;
  &lt;li&gt;Log4j2 Enhancements include profile support and Environment property lookup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0.0-RC1-Release-Notes"&gt;release notes&lt;/a&gt; for more details and upgrade instructions.&lt;/p&gt;
&lt;p&gt;Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/3.0.0-RC1/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Microsoft's Asir Selvasingh on Azure Spring Apps, Java at Microsoft, application security, and more</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/a-bootiful-podcast-microsoft-s-asir-selvasingh-on-azure-spring-apps-java-at-microsoft-application-security-and-more" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-10-20:4962</id>
    <updated>2022-10-20T15:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this installment, Josh Long (@starbuxma) talks to his friend, Microsoft&amp;rsquo;s Asir Selvasingh (@asirselvasingh), about Azure Spring Apps, Java at Microsoft, Spring, application security, and more. Want to learn more? Join us at SpringOne (6-8 December 2022)!&lt;/p&gt;
&lt;iframe title="Microsoft’s Asir Selvasingh on Azure Spring Apps, Java at Microsoft, application security, and more " allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=giege-12f2df5-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;p&gt;Want to meet amazing people like Asir? Join us at SpringOne 2022! Register now and get $200 off with this discount code &lt;code&gt;S1VM22_Advocate_200&lt;/code&gt;.&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.7.5 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/spring-boot-2-7-5-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2022-10-20:4961</id>
    <updated>2022-10-20T14:27:46Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;2.7.5&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.7.5"&gt;31 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/2.7.5/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 6.0.0-RC2 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/spring-framework-6-0-0-rc2-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2022-10-20:4959</id>
    <updated>2022-10-20T13:17:51Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Framework &lt;code&gt;6.0.0-RC2&lt;/code&gt; is available now.&lt;/p&gt;
&lt;p&gt;Spring Framework &lt;code&gt;6.0.0-RC2&lt;/code&gt; includes &lt;a href="https://github.com/spring-projects/spring-framework/releases/tag/v6.0.0-RC2"&gt;28 fixes and improvements&lt;/a&gt;. Stay tuned for the announcement of Spring Boot &lt;code&gt;3.0.0-RC1&lt;/code&gt; later today!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://projects.spring.io/spring-framework/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-framework/docs/6.0.0-RC2/reference/html/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>CVE-2022-31684: Reactor Netty HTTP Server may log request headers</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/cve-2022-31684-reactor-netty-http-server-may-log-request-headers" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Violeta Georgieva</name>
    </author>
    <id>tag:spring.io,2022-10-20:4956</id>
    <updated>2022-10-20T12:45:00Z</updated>
    <content type="html">&lt;p&gt;The Reactor Netty 1.0.24 release on &lt;a href="https://github.com/reactor/reactor-netty/releases/tag/v1.0.24"&gt;October 11&lt;/a&gt; included fix for &lt;a href="https://tanzu.vmware.com/security/cve-2022-31684"&gt;CVE-2022-31684&lt;/a&gt; affecting Reactor Netty HTTP Server.&lt;br/&gt;Users are encouraged to update as soon as possible.&lt;/p&gt;
&lt;p&gt;Reactor Netty is used internally in many frameworks including Spring WebFlux and its WebClient.&lt;br/&gt;If you have a Spring Boot application, you can upgrade to Reactor BOM 2020.0.24.&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.6.13 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/spring-boot-2-6-13-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2022-10-20:4958</id>
    <updated>2022-10-20T10:45:48Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;2.6.13&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.13"&gt;27 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/2.6.13/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Batch 5.0 RC1 is out!</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/20/spring-batch-5-0-rc1-is-out" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mahmoud Ben Hassine</name>
    </author>
    <id>tag:spring.io,2022-10-20:4957</id>
    <updated>2022-10-20T08:00:00Z</updated>
    <content type="html">&lt;p&gt;It is finally here! The first release candidate of Spring Batch 5 is now available from our &lt;a href="https://repo.spring.io/milestone"&gt;milestone repository&lt;/a&gt;. In this release, we worked on the following items:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Execution context Meta-data improvement&lt;/li&gt;
  &lt;li&gt;GemFire support removal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This blog post walks through these two changes in details. For the complete list of changes, please check the &lt;a href="https://github.com/spring-projects/spring-batch/releases/tag/5.0.0-RC1"&gt;release notes&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#execution-context-meta-data-improvement" class="anchor" name="execution-context-meta-data-improvement"&gt;&lt;/a&gt;Execution context Meta-data improvement&lt;/h2&gt;
&lt;p&gt;In addition to what Spring Batch already persists in the execution context with regard to runtime information (like the step type, the restart flag, etc), this release adds an important detail in the execution context which is the Spring Batch version that was used to serialize the context.&lt;/p&gt;
&lt;p&gt;While this seems a detail, it has a huge added value when debugging upgrade issues with regard to execution context serialization and deserialization.&lt;/p&gt;&lt;h2&gt;&lt;a href="#gemfire-support-removal" class="anchor" name="gemfire-support-removal"&gt;&lt;/a&gt;GemFire support removal&lt;/h2&gt;
&lt;p&gt;Based on the &lt;a href="https://github.com/spring-projects/spring-data-geode#notice"&gt;decision to discontinue&lt;/a&gt; the support of Spring Data for Apache Geode, the support for Apache Geode in Spring Batch was removed.&lt;/p&gt;
&lt;p&gt;The code was moved to the &lt;a href="https://github.com/spring-projects/spring-batch-extensions"&gt;spring-batch-extensions&lt;/a&gt; repository as a community-driven effort.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next?&lt;/h2&gt;
&lt;p&gt;We are planning to roll out a second release candidate early November and release 5.0.0 GA by the end of November, in time for Spring Boot 3.0.0. We would appreciate your help to try this release candidate out and share your feedback with us on &lt;a href="https://github.com/spring-projects/spring-batch/issues"&gt;Github&lt;/a&gt;, &lt;a href="https://twitter.com/springbatch"&gt;Twitter&lt;/a&gt; and &lt;a href="https://stackoverflow.com/questions/tagged/spring-batch"&gt;StackOverflow&lt;/a&gt;. You can find a migration guide &lt;a href="https://github.com/spring-projects/spring-batch/wiki/Spring-Batch-5.0-Migration-Guide"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I would like to thank all contributors who had a role in this first release candidate!&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-batch"&gt;Spring Batch Home&lt;/a&gt;|&lt;a href="https://github.com/spring-projects/spring-batch"&gt;Source on Github&lt;/a&gt;|&lt;a href="https://docs.spring.io/spring-batch/docs/5.0.0-RC1/reference/html/index-single.html"&gt;Reference documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - October 18th, 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/18/this-week-in-spring-october-18th-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-10-18:4955</id>
    <updated>2022-10-18T19:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! How&amp;rsquo;re you doin&amp;rsquo;? I&amp;rsquo;m doin&amp;rsquo; alright! Last week I was in Antwerp, Belgium, for the amazing Devoxx BE show. I did a presentation with my friend and hero &lt;a href="https://www.youtube.com/watch?v=2MYSLP2vgps&amp;t=1680s"&gt;James Ward on Spring and Kotlin&lt;/a&gt; (that was voted third most-liked talk at a show with more than 250 speakers!) That was a personal career highlight for me - it&amp;rsquo;s not often you get to win and have fun in life. And, as if that wasn&amp;rsquo;t awesome enough, this week I am in Las Vegas, NV, for JavaOne! Fingers crossed, this week will go smoothly, too! Both Devoxx and JavaOne are the first such shows since at least before the pandemic. It&amp;rsquo;s been a very long time in coming and I&amp;rsquo;m elated, overjoyed, to be able to be here.&lt;/p&gt;
&lt;p&gt;And, of course, I&amp;rsquo;m super excited about &lt;a href="https://springone.io"&gt;SpringOne 2022&lt;/a&gt;! Also, the first in-person show of its kind since before the pandemic! It&amp;rsquo;s going to be amazing. Have you registered? If not, you might consider using this registration code - &lt;code&gt;S1VM22_Advocate_200&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And this week&amp;rsquo;s busy roundup reflects the usual flurry of activity on the Spring team as we ready releases for our end-of-November timelines for Spring Framework 6 and Spring Boot 3, which means we&amp;rsquo;ve got a &lt;em&gt;ton&lt;/em&gt; of stuff to get into this week, so let&amp;rsquo;s!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/12/spring-framework-6-0-goes-rc1"&gt;Spring Framework 6.0 goes RC1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/12/observability-with-spring-boot-3"&gt;Observability with Spring Boot 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/12/a-bootiful-podcast-google-mad-scientist-josh-suereth-on-observability-with-opentelemetry-building-better-build-tools-and-so-much-more"&gt;A Bootiful Podcast: Google mad scientist Josh Suereth on Observability with OpenTelemetry, building better build tools, and so much more &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/13/spring-batch-5-0-0-m8-is-out"&gt;Spring Batch 5.0.0-M8 is out!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/13/spring-batch-5-0-0-m8-is-out"&gt;Learn more about Spring Framework 6 and Spring Boot 3 in these two great talks from Devoxx 2022&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/13/spring-batch-5-0-0-m8-is-out"&gt;Spring at JavaOne 2022&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/17/spring-data-2022-0-0-rc1-2021-2-5-and-2021-1-8-available"&gt;Spring Data 2022.0.0-RC1, 2021.2.5, and 2021.1.8 available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-security-6-0-0-rc1-and-5-8-0-rc1-are-released"&gt;Spring Security 6.0.0-RC1 and 5.8.0-RC1 are released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-security-5-7-4-and-5-6-8-available-now"&gt;Spring Security 5.7.4 and 5.6.8 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-for-graphql-1-1-0-rc1-released"&gt;Spring for GraphQL 1.1.0-RC1 released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/10/18/spring-web-services-4-0-0-rc1-is-out"&gt;Spring Web Services 4.0.0-RC1 is out!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Web Services 4.0.0-RC1 is out!</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/18/spring-web-services-4-0-0-rc1-is-out" />
    <category term="releases" label="Releases" />
    <author>
      <name>Greg L. Turnquist</name>
    </author>
    <id>tag:spring.io,2022-10-18:4954</id>
    <updated>2022-10-18T19:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Greetings Spring community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Spring Web Services team has released &lt;strong&gt;4.0.0-RC1&lt;/strong&gt;. This is the last planned release candidate that supports Spring Boot 3.0. The final GA release is coming next month in anticipation of Spring Boot 3.0 going GA.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;4.0.x&lt;/strong&gt; is the generation of Spring Web Services that works with Jakarta EE 9, the version where the enterprise specs (JAX-WS, etc.) migrate from &lt;code&gt;javax.&lt;strong&gt;&lt;/code&gt; to &lt;code&gt;jakarta.&lt;/strong&gt;&lt;/code&gt;. See &lt;a href="https://spring.io/blog/2022/10/12/spring-framework-6-0-goes-rc1"&gt;Juergen Holler&amp;#8217;s blog post&lt;/a&gt; for more details about that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Being based upon Spring Framework 6.0, this is also the generation of Spring Web Services that is rebased on top of Java 17 (LTS). So check it out!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For more details, read the following release notes for each version:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="release-notes-spring-web-services-version-4-0-0-rc1"&gt;&lt;a class="anchor" href="#release-notes-spring-web-services-version-4-0-0-rc1"&gt;&lt;/a&gt;Release Notes - Spring Web Services - Version 4.0.0-RC1&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1284 - Upgrade to Spring Security 6.0.0-RC1. dependenciesPull requests that update a dependency file&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1283 - Upgrade to Spring Framework 6.0.0-RC1. dependenciesPull requests that update a dependency file&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;There were also a LOT of 3rd party library upgrades that were merged from other baselines into this one (and tracked on other tickets).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1281 - Upgrade to xmlsec 3.0.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1280 - Upgrade to woodstox 4.4.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1274 - Remove old log4j dependency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1278 - Upgrade to Smack 4.3.5.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1277 - Upgrade to slf4j 2.0.3.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1274 - Upgrade to log4j2 2.19.0.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1272 - Upgrade to jdom2 2.0.6.1.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1271 - Upgrade to jaxen 1.1.6.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1268 - Upgrade to ehcache 2.10.9.2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;#1267 - Upgrade to Commons IO 2.11.0.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonitionblock note"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
This is to ensure Spring WS is running against the latest versions of libraries that are tied to Jakarta EE 9 (and NOT Jakarta EE 10, for which some are already supporting!)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Links: &lt;a href="https://spring.io/projects/spring-ws/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-ws"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-ws/issues"&gt;Issues&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The artifacts are located on repo.spring.io. Get it while it&amp;#8217;s hot!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="its-not-too-late-to-register-for-springone-2022"&gt;&lt;a class="anchor" href="#its-not-too-late-to-register-for-springone-2022"&gt;&lt;/a&gt;It&amp;#8217;s not too late to register for SpringOne 2022!&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you want the chance to meet up at the world&amp;#8217;s most popular Spring event, this is it. You can register at &lt;a href="https://springone.io/register" class="bare"&gt;https://springone.io/register&lt;/a&gt;. It&amp;#8217;s not too late.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;I&amp;#8217;ll be giving a talk on It&amp;#8217;s 10 PM: Where Is Your Relational Data Store? on Spring&amp;#8217;s various approaches approaches to tame relational data stores. But that&amp;#8217;s not all. There will be a plethora of talks ranging from beginner to advanced across the spectrum of Spring portfolio projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;And&amp;#8230;&amp;#8203;it&amp;#8217;s in San Francisco. Don&amp;#8217;t miss this chance to see your favorite Spring teammate (even if it&amp;#8217;s not me!)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring for GraphQL 1.1.0-RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/18/spring-for-graphql-1-1-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Brian Clozel</name>
    </author>
    <id>tag:spring.io,2022-10-18:4950</id>
    <updated>2022-10-18T16:40:00Z</updated>
    <content type="html">&lt;p&gt;I&amp;rsquo;m pleased to announce that the first release candidate of Spring for GraphQL 1.1.0 is now available from our &lt;a href="https://repo.spring.io/milestone"&gt;Milestone repository&lt;/a&gt;. This version will be shipped with Spring Boot 3.0.0-RC1 due for release later this week.&lt;/p&gt;
&lt;p&gt;This release candidate is the last stop for shipping new features; from that point, we&amp;rsquo;ll be focusing on bug fixes and documentation improvements. Our goal is to stabilize the current branch for &lt;a href="https://github.com/spring-projects/spring-graphql/milestone/14"&gt;our GA release scheduled next month&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With RC1, we&amp;rsquo;re shipping our new Observability support in Spring for GraphQL. Based on the &lt;a href="https://spring.io/blog/2022/10/12/observability-with-spring-boot-3"&gt;new Micrometer Observation work&lt;/a&gt;, this infrastructure replaces &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.metrics.supported.spring-graphql"&gt;the former GraphQL Metrics support in Spring Boot 2.7&lt;/a&gt;. GraphQL is a good use case for Observability in general, as the GraphQL engine can distribute the data fetching operations over caches, databases, REST APIs and more. It&amp;rsquo;s important not only to keep track of performance metrics for your GraphQL API, but also to be able to explore traces and investigate production issues.&lt;/p&gt;
&lt;p&gt;We didn&amp;rsquo;t have time to tackle features like &lt;a href="https://github.com/spring-projects/spring-graphql/issues/103"&gt;Pagination/Relay&lt;/a&gt; or &lt;a href="https://github.com/spring-projects/spring-graphql/issues/495"&gt;AOT/Native support&lt;/a&gt;, but we&amp;rsquo;re listening to the community. We&amp;rsquo;re working on our roadmap for the next feature version, so now is the time to vote on existing issues to show your interest!&lt;/p&gt;
&lt;p&gt;The annual &lt;a href="https://spring.io/survey"&gt;Spring survey is here&lt;/a&gt;, it&amp;rsquo;s a great way to let us know what you think!&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-graphql"&gt;&lt;code&gt;spring-graphql&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-graphql/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-graphql"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-graphql/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-graphql/docs/1.1.0-RC1/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-graphql"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 5.7.4 and 5.6.8 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/18/spring-security-5-7-4-and-5-6-8-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Steve Riesenberg</name>
    </author>
    <id>tag:spring.io,2022-10-18:4952</id>
    <updated>2022-10-18T12:54:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Security 5.7.4 and 5.6.8 are available now. In both cases the releases are largely composed of dependency upgrades and minor fixes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To learn more, please visit the &lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.7.4"&gt;5.7.4&lt;/a&gt; and
 &lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.6.8"&gt;5.6.8&lt;/a&gt; release summaries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-security/reference/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 6.0.0-RC1 and 5.8.0-RC1 are released</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/18/spring-security-6-0-0-rc1-and-5-8-0-rc1-are-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Steve Riesenberg</name>
    </author>
    <id>tag:spring.io,2022-10-18:4951</id>
    <updated>2022-10-18T12:54:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Security 6.0.0-RC1 and 5.8.0-RC1 are available now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the &lt;a href="https://github.com/spring-projects/spring-security/releases/tag/6.0.0-RC1"&gt;6.0.0-RC1&lt;/a&gt; and &lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.8.0-RC1"&gt;5.8.0-RC1&lt;/a&gt; release notes for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-security/reference/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Data 2022.0.0-RC1, 2021.2.5, and 2021.1.8 available</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/17/spring-data-2022-0-0-rc1-2021-2-5-and-2021-1-8-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2022-10-17:4948</id>
    <updated>2022-10-17T08:23:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;p&gt;On behalf of the Spring Data team and everyone who contributed, it is my pleasure to announce that Spring Data &lt;code&gt;2022.0.0&lt;/code&gt; has entered its release candidate phase by releasing RC1 today. It is available from the milestone repository. This release ships with several tickets fixed. Along with the release candidate, we shipped &lt;code&gt;2021.2.5&lt;/code&gt; and &lt;code&gt;2021.1.8&lt;/code&gt; service releases, to be picked up by corresponding Spring Boot releases.&lt;/p&gt;
&lt;p&gt;The release candidate ships with a revised module structure, specifically Spring Data for Apache Geode is no longer part of the release train. Expect a blog post that outlines details soon.&lt;/p&gt;
&lt;p&gt;Please give Spring Data &lt;code&gt;2022.0.0-RC1&lt;/code&gt; a try (for example, as part of the upcoming Spring Boot &lt;code&gt;3.0.0-RC1&lt;/code&gt; release), which will be available start.spring.io soon, and let us know about any regressions or other issues.&lt;/p&gt;&lt;h2&gt;&lt;a href="#2022-0-0-rc1" class="anchor" name="2022-0-0-rc1"&gt;&lt;/a&gt;2022.0.0-RC1&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons &lt;code&gt;3.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-commons/3.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/3.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/3.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-commons/releases/tag/3.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA &lt;code&gt;3.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-jpa/3.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/3.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/3.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jpa/releases/tag/3.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;4.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-cassandra/4.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/4.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/4.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-cassandra/releases/tag/4.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue &lt;code&gt;3.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-keyvalue/3.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/3.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/3.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-keyvalue/releases/tag/3.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB &lt;code&gt;4.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-mongodb/4.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/4.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/4.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-mongodb/releases/tag/4.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j &lt;code&gt;7.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-neo4j/7.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/7.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/7.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-neo4j/releases/tag/7.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP &lt;code&gt;3.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-ldap/3.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/3.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/3.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-ldap/releases/tag/3.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST &lt;code&gt;4.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-rest-webmvc/4.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/4.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/4.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-rest/releases/tag/4.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis &lt;code&gt;3.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-redis/3.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/3.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/3.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-redis/releases/tag/3.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch &lt;code&gt;5.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-elasticsearch/5.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/5.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/5.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/5.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase &lt;code&gt;5.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-couchbase/5.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/5.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/5.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-couchbase/releases/tag/5.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Relational &lt;code&gt;3.0 RC1&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-relational/3.0.0-RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/3.0.0-RC1/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/3.0.0-RC1/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-relational/releases/tag/3.0.0-RC1"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#2021-2-5" class="anchor" name="2021-2-5"&gt;&lt;/a&gt;2021.2.5&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-commons/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JDBC &lt;code&gt;2.4.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.4.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.4.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.4.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-relational/releases/tag/2.4.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jpa/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;3.4.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.4.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.4.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.4.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.4.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB &lt;code&gt;3.4.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.4.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.4.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.4.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.4.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j &lt;code&gt;6.3.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/6.3.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.3.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.3.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-neo4j/releases/tag/6.3.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data R2DBC &lt;code&gt;1.5.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.5.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.5.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.5.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.5.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Geode &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-geode/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-ldap/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-envers/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST &lt;code&gt;3.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-rest/releases/tag/3.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis &lt;code&gt;2.7.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.7.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.7.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.7.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-redis/releases/tag/2.7.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch &lt;code&gt;4.4.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.4.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.4.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.4.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.4.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase &lt;code&gt;4.4.5&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.4.5"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.4.5/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.4.5/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.4.5"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#2021-1-9" class="anchor" name="2021-1-9"&gt;&lt;/a&gt;2021.1.9&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-commons/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JDBC &lt;code&gt;2.3.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.3.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.3.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.3.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-relational/releases/tag/2.3.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jpa/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;3.3.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.3.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.3.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.3.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.3.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB &lt;code&gt;3.3.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.3.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.3.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.3.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.3.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j &lt;code&gt;6.2.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/6.2.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.2.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.2.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-neo4j/releases/tag/6.2.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data R2DBC &lt;code&gt;1.4.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.4.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.4.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.4.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.4.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Geode &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-geode/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-ldap/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-envers/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST &lt;code&gt;3.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-rest/releases/tag/3.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis &lt;code&gt;2.6.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.6.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.6.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.6.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-redis/releases/tag/2.6.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch &lt;code&gt;4.3.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.3.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.3.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.3.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.3.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase &lt;code&gt;4.3.9&lt;/code&gt; - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.3.9"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.3.9/api/"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.3.9/reference/html/"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.3.9"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring at JavaOne 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/16/spring-at-javaone-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-10-16:4947</id>
    <updated>2022-10-16T07:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! It&amp;rsquo;s Sunday the 16th of October as I write this and I&amp;rsquo;m winging my way to sunny Las Vegas, Nevada, where I&amp;rsquo;ll be attending (and presenting at) the first JavaOne show in &lt;em&gt;years&lt;/em&gt;! It didn&amp;rsquo;t exist as the JavaOne we know and love for years, even before the pandemic interrupted life as we know it worldwide. So this isn&amp;rsquo;t just the first JavaOne since 2019, it&amp;rsquo;s [the first JavaOne since 2017](&lt;a href="https://www.infoq.com/news/2018/04/oracle-kills-java-one/_!"&gt;https://www.infoq.com/news/2018/04/oracle-kills-java-one/_!&lt;/a&gt; I can&amp;rsquo;t wait to be there, to see the amazing community, to soak up the sun and fun with my teammates and friends in the ecosystem. And we want to see you, too.&lt;/p&gt;
&lt;p&gt;There are a few of us doing talks from the Spring team and we&amp;rsquo;d love to see you!&lt;/p&gt;
&lt;p&gt;First of all: we have a booth, so join us there.&lt;/p&gt;
&lt;p&gt;There are going to be a bunch of great talks from those of us on the Spring team and in the Spring community. Here&amp;rsquo;s a list of some of the ones I&amp;rsquo;m interested in seeing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I&amp;rsquo;ll be doing my talk, &lt;em&gt;Kubernetes Native Java&lt;/em&gt; [LRN1401], looking at all the latest and greatest in the Spring ecosystem, including Spring Boot 3 and Spring Framework 6, on&lt;/li&gt;
  &lt;li&gt;Observability: Beyond the Three Pillars with Spring [LIT3834] with Jonatan Ivanov and Josh Cummings, Spring team&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To Production and Beyond: Metrics with Micrometer&lt;/em&gt; [LRN3692] by Erin Schnabel, RedHat, and Jonatan Ivanov, Spring team&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Das Boot: Diving into Debugging Spring Boot Applications&lt;/em&gt; [LRN1402] by Mark Heckler, Microsoft&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;JHipster: Learn How to Contribute and Help Us Upgrade to Spring Boot 3&lt;/em&gt; [CHA4945] by Matt Raible, Okta&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;A Stateful Spring Boot Microservice Using Spring Data, Hibernate, and JSON&lt;/em&gt; [LRN2797] by Michael McMahon&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Oracle Autonomous Database and Spring Boot&lt;/em&gt; [HOL3736] by Andres Almiray, Oracle&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Rapid Full Stack Development with JHipster and Spring Native&lt;/em&gt; [LRN2605] by Alina Yurenko, Oracle&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;React + SpringBoot Microservice + Autonomous DB = Native Cloud Java App&lt;/em&gt; [HOL2798] by Kuassi Mensah&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Micro Frontends for Java Developers&lt;/em&gt; [LRN1392] by Matt Raible&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Reactive—A New Hope: Learn from a Performance History&lt;/em&gt; [LIT3843] by Alberto Salazar&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Batch Processing Cloud Apps with Java&lt;/em&gt; [LRN3686] by Rodrigo Graciano and Elder Moraes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m sure there are countless others worth your time, too! Either way, I hope we&amp;rsquo;ll see you there! &lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re not able to meet us at JavaOne this week, that&amp;rsquo;s OK - there&amp;rsquo;s still time to join the Spring team and larger Java ecosystem for &lt;a href="https://springone.io"&gt;SpringOne&lt;/a&gt;, being held 6-8 December, 2022, in sunny San Francisco, CA, 94105! Join us! (Psst.: If you register now, there’s a &lt;em&gt;$200&lt;/em&gt; discount from the pass price with this code &lt;code&gt;S1VM22_Advocate_200&lt;/code&gt;.)&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Learn more about Spring Framework 6 and Spring Boot 3 in these two great talks from Devoxx 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/15/learn-more-about-spring-framework-6-and-spring-boot-3-in-these-two-great-talks-from-devoxx-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-10-15:4946</id>
    <updated>2022-10-15T07:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! I was just at Devoxx in Belgium, where hundreds of experts from across the Java ecosystem converged for the first time since 2019 to deliver their biggest and best. &lt;/p&gt;
&lt;p&gt;I could do a proper trip report, but I really just came here to point you to two talks from two of my amazing teammates, &lt;a href="https://twitter.com/snicoll"&gt;Stéphane Nicoll (@snicoll)&lt;/a&gt; and &lt;a href="https://twitter.com/bclozel"&gt;Brian Clozel (@bclozel)&lt;/a&gt;, who have been very hard at work on both Spring Framework 6 and Spring Boot 3, both of which will land by the end of November, 2022. These are brand new generations of the framework, implying &lt;em&gt;huge&lt;/em&gt; new paradigms and new opportunities for developers. &lt;/p&gt;
&lt;p&gt;This first is a broader, whirlwind tour of the new features in Spring Framework 6 (which bubble up into Spring Boot 3).&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5FWNpaiqYhw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;This second one introduces the new ahead-of-time (AOT) support in Spring Framework 6 and Spring Boot 3, which makes it trivial to build GraalVM native images.&lt;/p&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/TS4DpYSmfXk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;NB: please ignore the metadata for the YouTube videos. Both talks feature both speakers, and there is no mention whatsoever of React and JavaScript and the like. I think that was a metadata issue with the publication of the videos on YouTube, which will hopefully be resolved. &lt;/p&gt;
&lt;p&gt;Enjoy! &lt;/p&gt;
&lt;p&gt;If you missed this event, that&amp;rsquo;s OK - there&amp;rsquo;s still time to join the Spring team and larger Java ecosystem for SpringOne, being held 6-8 December, 2022, in sunny San Francisco, CA, 94105! Join us! (Psst.: If you register now, there’s a $200 discount from the pass price with this code S1VM22_Advocate_200.)&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Batch 5.0.0-M8 is out!</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/13/spring-batch-5-0-0-m8-is-out" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mahmoud Ben Hassine</name>
    </author>
    <id>tag:spring.io,2022-10-13:4945</id>
    <updated>2022-10-13T08:00:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and all contributors, I am pleased to announce that Spring Batch &lt;code&gt;5.0.0-M8&lt;/code&gt; is now available from our &lt;a href="https://repo.spring.io/milestone"&gt;milestone repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this milestone, we introduced two main changes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;New default execution context serialization format&lt;/li&gt;
  &lt;li&gt;SystemCommandTasklet enhancements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This blog post walks through these two major changes in details. For the complete list of changes,&lt;br/&gt;please check the &lt;a href="https://github.com/spring-projects/spring-batch/releases/tag/5.0.0-M8"&gt;release notes&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#new-default-execution-context-serialization-format" class="anchor" name="new-default-execution-context-serialization-format"&gt;&lt;/a&gt;New default execution context serialization format&lt;/h2&gt;
&lt;p&gt;In this milestone release, the &lt;code&gt;DefaultExecutionContextSerializer&lt;/code&gt; was updated to serialize/deserialize the context to/from Base64.&lt;/p&gt;
&lt;p&gt;Moreover, the default &lt;code&gt;ExecutionContextSerializer&lt;/code&gt; configured by &lt;code&gt;@EnableBatchProcessing&lt;/code&gt; or &lt;code&gt;DefaultBatchConfiguration&lt;/code&gt; was changed from &lt;code&gt;JacksonExecutionContextStringSerializer&lt;/code&gt; to &lt;code&gt;DefaultExecutionContextSerializer&lt;/code&gt;. The dependency to Jackson was made optional. In order to use the &lt;code&gt;JacksonExecutionContextStringSerializer&lt;/code&gt;, &lt;code&gt;jackson-core&lt;/code&gt; should be added to the classpath.&lt;/p&gt;&lt;h2&gt;&lt;a href="#systemcommandtasklet-enhancements" class="anchor" name="systemcommandtasklet-enhancements"&gt;&lt;/a&gt;SystemCommandTasklet enhancements&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;SystemCommandTasklet&lt;/code&gt; has been revisited in this release and was changed as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
  &lt;p&gt;A new strategy interface named &lt;code&gt;CommandRunner&lt;/code&gt; was introduced in order to decouple the command execution from the tasklet execution. The default implementation is the &lt;code&gt;JvmCommandRunner&lt;/code&gt; which uses the &lt;code&gt;java.lang.Runtime#exec&lt;/code&gt; API to run system commands. This interface can be implemented to use any other API to run system commands.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;The method that runs the command now accepts an array of &lt;code&gt;String&lt;/code&gt;s representing the command and its arguments. There is no need to tokenize the command or do any pre-processing anymore. This change makes the API more intuitive, and less prone to errors.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#feedback" class="anchor" name="feedback"&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;p&gt;I would like to thank all contributors who had a role in this release! As we continue&lt;br/&gt;our work on Spring Batch 5, we look forward to your feedback on &lt;a href="https://github.com/spring-projects/spring-batch/issues"&gt;Github&lt;/a&gt;, &lt;a href="https://twitter.com/springbatch"&gt;Twitter&lt;/a&gt; and &lt;a href="https://stackoverflow.com/questions/tagged/spring-batch"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-batch"&gt;Spring Batch Home&lt;/a&gt;|&lt;a href="https://github.com/spring-projects/spring-batch"&gt;Source on Github&lt;/a&gt;|&lt;a href="https://docs.spring.io/spring-batch/docs/5.0.0-M8/reference/html/index-single.html"&gt;Reference documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Google mad scientist Josh Suereth on Observability with OpenTelemetry, building better build tools, and so much more</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/12/a-bootiful-podcast-google-mad-scientist-josh-suereth-on-observability-with-opentelemetry-building-better-build-tools-and-so-much-more" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-10-13:4944</id>
    <updated>2022-10-13T06:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this installment, Josh Long (@starbuxman) looks at the latest and greatest in Spring Boot 3 AOT, then talks to Google&amp;rsquo;s Josh Suereth (@jsuereth) about observability with OpenTelemetry, building better build tools, and so much more. &lt;/p&gt;
&lt;iframe title="Google mad scientist Josh Suereth on Observability with OpenTelemetry, building better build tools, and so much more " allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=jsrsi-12e8472-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;p&gt;Want to learn more about Spring Boot and the wider ecosystem? SpringOne 2022 is almost here! If you want a chance to learn from the source, I hope you’ll join us 6-8 December 2022, right here in my hometown of San Francisco, my favorite west coast city in the USA. (Psst.: If you register now, there’s a $200 discount from the pass price with this code S1VM22_Advocate_200.)&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Observability with Spring Boot 3</title>
    <link rel="alternate" href="https://spring.io/blog/2022/10/12/observability-with-spring-boot-3" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Marcin Grzejszczak</name>
    </author>
    <id>tag:spring.io,2022-10-12:4943</id>
    <updated>2022-10-12T21:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;The Spring Observability Team has been working on adding observability support for Spring Applications for quite some time, and we are pleased to inform you that this feature will be generally available with Spring Framework 6 and Spring Boot 3!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;What is observability? In our understanding, it is &lt;em&gt;"how well you can understand the internals of your system by examining its outputs"&lt;/em&gt;. We believe that the interconnection between metrics, logging, and distributed tracing gives you the ability to reason about the state of your system in order to debug exceptions and latency in your applications. You can watch more about what we think observability is in &lt;a href="https://tanzu.vmware.com/developer/tv/enlightning/10/"&gt;this episode of Enlightning with Jonatan Ivanov&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The upcoming Spring Boot &lt;code&gt;3.0.0-RC1&lt;/code&gt; release will contain numerous autoconfigurations for improved metrics with &lt;a href="https://micrometer.io/"&gt;Micrometer&lt;/a&gt; and new distributed tracing support with &lt;a href="https://micrometer.io/docs/tracing"&gt;Micrometer Tracing&lt;/a&gt; (formerly &lt;a href="https://spring.io/projects/spring-cloud-sleuth"&gt;Spring Cloud Sleuth&lt;/a&gt;). The most notable changes are that it will contain built-in support for log correlation, &lt;a href="https://www.w3.org/TR/trace-context/"&gt;W3C context propagation&lt;/a&gt; will be the default propagation type, and we will support automatic propagation of metadata to be used by the tracing infrastructure (called "remote baggage") that helps to label the observations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We have been changing the Micrometer API a lot over the course of this year. The most important change is that we have introduced a new API: the Observation API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="quoteblock"&gt;
&lt;blockquote&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The idea of its founding was that we want the users to instrument their code once using a single API and have multiple benefits out of it (e.g. metrics, tracing, logging).&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This blog post details what you need to know to about that API and how you can use it to provide more insights into your application.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="how-does-micrometer-observation-work" class="sect0"&gt;&lt;a class="anchor" href="#how-does-micrometer-observation-work"&gt;&lt;/a&gt;How Does Micrometer Observation Work?&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For any observation to happen, you need to register &lt;code&gt;ObservationHandler&lt;/code&gt; objects through an &lt;code&gt;ObservationRegistry&lt;/code&gt;. An &lt;code&gt;ObservationHandler&lt;/code&gt; reacts only to supported implementations of an &lt;code&gt;Observation.Context&lt;/code&gt; and can create, for example, timers, spans, and logs by reacting to the lifecycle events of an observation, such as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;start&lt;/code&gt; - Observation has been started. Happens when the &lt;code&gt;Observation#start()&lt;/code&gt; method gets called.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;stop&lt;/code&gt; - Observation has been stopped. Happens when the &lt;code&gt;Observation#stop()&lt;/code&gt; method gets called.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;error&lt;/code&gt; - An error occurred while observing. Happens when the &lt;code&gt;Observation#error(exception)&lt;/code&gt; method gets called.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;event&lt;/code&gt; - An event happened when observing. Happens when the &lt;code&gt;Observation#event(event)&lt;/code&gt; method gets called.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;scope started&lt;/code&gt; - Observation opens a scope. The scope must be closed when no longer used. Handlers can create thread local variables on start that are cleared upon closing of the scope. Happens when the &lt;code&gt;Observation#openScope()&lt;/code&gt; method gets called.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;scope stopped&lt;/code&gt; - Observation stops a scope. Happens when the &lt;code&gt;Observation.Scope#close()&lt;/code&gt; method gets called.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Whenever any of these methods is called, an &lt;code&gt;ObservationHandler&lt;/code&gt; method (such as &lt;code&gt;onStart(T extends Observation.Context ctx)&lt;/code&gt;, &lt;code&gt;onStop(T extends Observation.Context ctx)&lt;/code&gt;, and so on) are called. To pass state between the handler methods, you can use the &lt;code&gt;Observation.Context&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The observation state diagram looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code&gt;        Observation           Observation
        Context               Context
Created ----------&amp;gt; Started ----------&amp;gt; Stopped&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The observation Scope state diagram looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code&gt;              Observation
              Context
Scope Started ----------&amp;gt; Scope Closed&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To make it possible to debug production problems, an observation needs additional metadata, such as key-value pairs (also known as tags). You can then query your metrics or distributed tracing backend by using those tags to find the required data. Tags can be of either high or low cardinality.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This is an example of the Micrometer Observation API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;// Create an ObservationRegistry
ObservationRegistry registry = ObservationRegistry.create();
// Register an ObservationHandler
registry.observationConfig().observationHandler(new MyHandler());

// Create an Observation and observe your code!
Observation.createNotStarted("user.name", registry)
        .contextualName("getting-user-name")
        .lowCardinalityKeyValue("userType", "userType1") // let's assume that you can have 3 user types
        .highCardinalityKeyValue("userId", "1234") // let's assume that this is an arbitrary number
        .observe(() -&amp;gt; log.info("Hello")); // this is a shortcut for starting an observation, opening a scope, running user's code, closing the scope and stopping the observation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="admonitionblock important"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
&lt;strong&gt;High cardinality&lt;/strong&gt; means that a pair will have an unbounded number of possible values. An HTTP URL is a good
example of such a key value (for example, &lt;code&gt;/user/user1234&lt;/code&gt;, &lt;code&gt;/user/user2345&lt;/code&gt;, and so on). &lt;strong&gt;Low cardinality&lt;/strong&gt; means that a key value will  have a bounded number of possible values. A &lt;strong&gt;templated&lt;/strong&gt; HTTP URL (such as &lt;code&gt;/user/{userId}&lt;/code&gt;) is a good example of such a key value.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To separate observation lifecycle operations from an observation configuration (such as names and low and high cardinality tags), you can use the &lt;code&gt;ObservationConvention&lt;/code&gt; that provides an easy way of overriding the default naming conventions.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="building-your-first-observed-application" class="sect0"&gt;&lt;a class="anchor" href="#building-your-first-observed-application"&gt;&lt;/a&gt;Building Your First Observed Application&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The easiest way to get started is to create a new project from &lt;a href="https://start.spring.io" class="bare"&gt;https://start.spring.io&lt;/a&gt;. Make sure to select Spring Boot 3.0.0-SNAPSHOT (you can switch to RC1 once &lt;a href="https://calendar.spring.io/"&gt;it&amp;#8217;s available&lt;/a&gt;) and your favorite build tool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We will build a Spring WebMvc server application and a client to call the server using RestTemplate. We start with the server side.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="webmvc-server-setup"&gt;&lt;a class="anchor" href="#webmvc-server-setup"&gt;&lt;/a&gt;WebMvc Server Setup&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Since we want to start an HTTP server, we have to pick the &lt;code&gt;org.springframework.boot:spring-boot-starter-web&lt;/code&gt; dependency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To create observations by using the &lt;code&gt;@Observed&lt;/code&gt; aspect, we need to add the &lt;code&gt;org.springframework.boot:spring-boot-starter-aop&lt;/code&gt; dependency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To add observation features to your application, choose &lt;code&gt;spring-boot-starter-actuator&lt;/code&gt; (to add &lt;a href="https://micrometer.io"&gt;Micrometer&lt;/a&gt; to the classpath).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now it is time to add observability related features!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Metrics&lt;/strong&gt;&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For Micrometer metrics with Prometheus, we need to add the &lt;code&gt;io.micrometer:micrometer-registry-prometheus&lt;/code&gt; dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tracing&lt;/strong&gt;&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;strong&gt;Tracing Context Propagation&lt;/strong&gt; with Micrometer Tracing, we need to pick a &lt;strong&gt;tracer&lt;/strong&gt; bridge (&lt;strong&gt;tracer&lt;/strong&gt; is a library that is used to handle the lifecycle of a span). We pick &lt;a href="https://zipkin.io"&gt;Zipkin Brave&lt;/a&gt; by adding the &lt;code&gt;io.micrometer:micrometer-tracing-bridge-brave&lt;/code&gt;.&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The client application that we will create for this demo will use another tracer library to show an interop between tracers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For &lt;strong&gt;Latency Visualization&lt;/strong&gt;, we need to send the finished spans in some format to a server. In our case, we produce an Zipkin-compliant span. To achieve that, we need to add the &lt;code&gt;io.zipkin.reporter2:zipkin-reporter-brave&lt;/code&gt; dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Logs&lt;/strong&gt;&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Since we have Micrometer Tracing on the classpath, the logs are automatically correlated (that is, they contain a unique trace identifier). Now we need to ship the logs. For this demo, we ship them to &lt;a href="https://grafana.com/oss/loki/"&gt;Grafana Loki&lt;/a&gt;. We can achieve that by adding the &lt;code&gt;com.github.loki4j:loki-logback-appender&lt;/code&gt; dependency (check &lt;a href="https://search.maven.org/artifact/com.github.loki4j/loki-logback-appender"&gt;this link&lt;/a&gt; for the latest release version)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="admonitionblock important"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
If you are new to tracing, we need to quickly define a couple of basic terms. You can wrap any operation in a &lt;code&gt;span&lt;/code&gt;. It has a unique &lt;code&gt;span id&lt;/code&gt; and contains timing information and some additional metadata (key-value pairs). Because you can produce child spans from spans, the whole tree of spans forms a &lt;code&gt;trace&lt;/code&gt; that shares the same &lt;code&gt;trace id&lt;/code&gt; (that is, a correlation identifier).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now we need to add some configuration. We set up &lt;code&gt;actuator&lt;/code&gt; and &lt;code&gt;metrics&lt;/code&gt; to publish percentiles histograms, and we redefine the logging pattern to include the trace and span identifiers. We set the sampling probability to &lt;code&gt;1.0&lt;/code&gt; to send all traces to latency analysis tool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;/src/main/resources/application.properties&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="properties"&gt;server.port=7654
spring.application.name=server

# All traces should be sent to latency analysis tool
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus

# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Since we are running the &lt;a href="https://grafana.com/grafana/"&gt;Grafana&lt;/a&gt; stack with &lt;a href="https://grafana.com/oss/loki/"&gt;Loki&lt;/a&gt; and &lt;a href="https://grafana.com/oss/tempo/"&gt;Tempo&lt;/a&gt; locally, we configure the &lt;code&gt;loki-logback-appender&lt;/code&gt; to send logs to the local instance of Loki.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;/src/main/resources/logback-spring.xml&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="xml"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;configuration&amp;gt;
    &amp;lt;include resource="org/springframework/boot/logging/logback/base.xml" /&amp;gt;
    &amp;lt;springProperty scope="context" name="appName" source="spring.application.name"/&amp;gt;

    &amp;lt;appender name="LOKI" class="com.github.loki4j.logback.Loki4jAppender"&amp;gt;
        &amp;lt;http&amp;gt;
            &amp;lt;url&amp;gt;http://localhost:3100/loki/api/v1/push&amp;lt;/url&amp;gt;
        &amp;lt;/http&amp;gt;
        &amp;lt;format&amp;gt;
            &amp;lt;label&amp;gt;
                &amp;lt;pattern&amp;gt;app=${appName},host=${HOSTNAME},traceID=%X{traceId:-NONE},level=%level&amp;lt;/pattern&amp;gt;
            &amp;lt;/label&amp;gt;
            &amp;lt;message&amp;gt;
                &amp;lt;pattern&amp;gt;${FILE_LOG_PATTERN}&amp;lt;/pattern&amp;gt;
            &amp;lt;/message&amp;gt;
            &amp;lt;sortByTime&amp;gt;true&amp;lt;/sortByTime&amp;gt;
        &amp;lt;/format&amp;gt;
    &amp;lt;/appender&amp;gt;

    &amp;lt;root level="INFO"&amp;gt;
        &amp;lt;appender-ref ref="LOKI"/&amp;gt;
    &amp;lt;/root&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="webmvc-server-code"&gt;&lt;a class="anchor" href="#webmvc-server-code"&gt;&lt;/a&gt;WebMvc Server Code&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Time to write some server-side code! We want to achieve full observability of our application, including metrics, tracing, and additional logging.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To begin with, we write a controller that logs a message to the console and delegate work to a service.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;MyController.java&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@RestController
class MyController {

    private static final Logger log = LoggerFactory.getLogger(MyController.class);
    private final MyUserService myUserService;

    MyController(MyUserService myUserService) {
        this.myUserService = myUserService;
    }

    @GetMapping("/user/{userId}")
    String userName(@PathVariable("userId") String userId) {
        log.info("Got a request");
        return myUserService.userName(userId);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We want to have some detailed observation of the &lt;code&gt;MyUserService#userName&lt;/code&gt; method. Thanks to having added AOP support, we can use the &lt;code&gt;@Observed&lt;/code&gt; annotation. To do so, we can register a &lt;code&gt;ObservedAspect&lt;/code&gt; bean.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;MyConfiguration.java&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@Configuration(proxyBeanMethods = false)
class MyConfiguration {
    // To have the @Observed support we need to register this aspect
    @Bean
    ObservedAspect observedAspect(ObservationRegistry observationRegistry) {
        return new ObservedAspect(observationRegistry);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;MyUserService.java&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@Service
class MyUserService {

    private static final Logger log = LoggerFactory.getLogger(MyUserService.class);

    private final Random random = new Random();

    // Example of using an annotation to observe methods
    // &amp;lt;user.name&amp;gt; will be used as a metric name
    // &amp;lt;getting-user-name&amp;gt; will be used as a span  name
    // &amp;lt;userType=userType2&amp;gt; will be set as a tag for both metric &amp;amp; span
    @Observed(name = "user.name",
            contextualName = "getting-user-name",
            lowCardinalityKeyValues = {"userType", "userType2"})
    String userName(String userId) {
        log.info("Getting user name for user with id &amp;lt;{}&amp;gt;", userId);
        try {
            Thread.sleep(random.nextLong(200L)); // simulates latency
        }
        catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
        return "foo";
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;With metrics and tracing on the classpath, having this annotation leads to the creation of a &lt;code&gt;timer&lt;/code&gt;, a &lt;code&gt;long task timer&lt;/code&gt;, and a &lt;code&gt;span&lt;/code&gt;. The timer would be named &lt;code&gt;user.name&lt;/code&gt;, the long task timer would be named &lt;code&gt;user.name.active&lt;/code&gt;, and the span would be named &lt;code&gt;getting-user-name&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;What about logs? We do not want to write the logging statements manually whenever an observation takes place. What we can do is to create a dedicated handler that logs some text for each observation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;MyHandler.java&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;// Example of plugging in a custom handler that in this case will print a statement before and after all observations take place
@Component
class MyHandler implements ObservationHandler&amp;lt;Observation.Context&amp;gt; {

    private static final Logger log = LoggerFactory.getLogger(MyHandler.class);

    @Override
    public void onStart(Observation.Context context) {
        log.info("Before running the observation for context [{}], userType [{}]", context.getName(), getUserTypeFromContext(context));
    }

    @Override
    public void onStop(Observation.Context context) {
        log.info("After running the observation for context [{}], userType [{}]", context.getName(), getUserTypeFromContext(context));
    }

    @Override
    public boolean supportsContext(Observation.Context context) {
        return true;
    }

    private String getUserTypeFromContext(Observation.Context context) {
        return StreamSupport.stream(context.getLowCardinalityKeyValues().spliterator(), false)
                .filter(keyValue -&amp;gt; "userType".equals(keyValue.getKey()))
                .map(KeyValue::getValue)
                .findFirst()
                .orElse("UNKNOWN");
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;That is it! Time for the client side.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="resttemplate-client-application-setup"&gt;&lt;a class="anchor" href="#resttemplate-client-application-setup"&gt;&lt;/a&gt;RestTemplate Client Application Setup&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As before, we add the &lt;code&gt;spring-boot-starter-web&lt;/code&gt; and &lt;code&gt;spring-boot-starter-actuator&lt;/code&gt; dependencies to have a web server running and Micrometer support added.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Time to add observability related features!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Metrics&lt;/strong&gt;&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For Micrometer metrics with Prometheus, we need to add the &lt;code&gt;io.micrometer:micrometer-registry-prometheus&lt;/code&gt; dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tracing&lt;/strong&gt;&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;strong&gt;Tracing Context Propagation&lt;/strong&gt; with Micrometer Tracing, we need to pick a &lt;strong&gt;tracer&lt;/strong&gt; bridge. We pick &lt;a href="https://opentelemetry.io"&gt;OpenTelemetry&lt;/a&gt; by adding the &lt;code&gt;io.micrometer:micrometer-tracing-bridge-otel&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For &lt;strong&gt;Latency Visualization&lt;/strong&gt;, we need to send the finished spans in some format to a server. In our case, we produce an OpenZipkin compliant span. To achieve that, we need to add the &lt;code&gt;io.opentelemetry:opentelemetry-exporter-zipkin&lt;/code&gt; dependency.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Logs&lt;/strong&gt;&lt;/p&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;As previously, we add the &lt;code&gt;com.github.loki4j:loki-logback-appender&lt;/code&gt; dependency (check &lt;a href="https://search.maven.org/artifact/com.github.loki4j/loki-logback-appender"&gt;this link&lt;/a&gt; for the latest release version) to ship logs to Loki.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now we need to add some configuration. We add almost identical configuration as we did on the server side.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;/src/main/resources/application.properties&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="properties"&gt;server.port=6543
spring.application.name=client

# All traces should be sent to latency analysis tool
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Loki Appender configuration looks exactly the same.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;/src/main/resources/logback-spring.xml&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="xml"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;configuration&amp;gt;
    &amp;lt;include resource="org/springframework/boot/logging/logback/base.xml" /&amp;gt;
    &amp;lt;springProperty scope="context" name="appName" source="spring.application.name"/&amp;gt;

    &amp;lt;appender name="LOKI" class="com.github.loki4j.logback.Loki4jAppender"&amp;gt;
        &amp;lt;http&amp;gt;
            &amp;lt;url&amp;gt;http://localhost:3100/loki/api/v1/push&amp;lt;/url&amp;gt;
        &amp;lt;/http&amp;gt;
        &amp;lt;format&amp;gt;
            &amp;lt;label&amp;gt;
                &amp;lt;pattern&amp;gt;app=${appName},host=${HOSTNAME},traceID=%X{traceId:-NONE},level=%level&amp;lt;/pattern&amp;gt;
            &amp;lt;/label&amp;gt;
            &amp;lt;message&amp;gt;
                &amp;lt;pattern&amp;gt;${FILE_LOG_PATTERN}&amp;lt;/pattern&amp;gt;
            &amp;lt;/message&amp;gt;
            &amp;lt;sortByTime&amp;gt;true&amp;lt;/sortByTime&amp;gt;
        &amp;lt;/format&amp;gt;
    &amp;lt;/appender&amp;gt;

    &amp;lt;root level="INFO"&amp;gt;
        &amp;lt;appender-ref ref="LOKI"/&amp;gt;
    &amp;lt;/root&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="resttemplate-application-client-code"&gt;&lt;a class="anchor" href="#resttemplate-application-client-code"&gt;&lt;/a&gt;RestTemplate Application Client Code&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now it is time to write some client-side code! We send a request with &lt;code&gt;RestTemplate&lt;/code&gt; to the server side, and we want to achieve the full observability of our application, including metrics and tracing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To begin, we need a &lt;code&gt;RestTemplate&lt;/code&gt; bean that is automatically instrumented by Spring Boot. Remember to inject the &lt;code&gt;RestTemplateBuilder&lt;/code&gt; and to construct a &lt;code&gt;RestTemplate&lt;/code&gt; instance from the builder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;MyConfiguration.java&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@Configuration(proxyBeanMethods = false)
class MyConfiguration {
    // IMPORTANT! To instrument RestTemplate you must inject the RestTemplateBuilder
    @Bean
    RestTemplate restTemplate(RestTemplateBuilder builder) {
        return builder.build();
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now we can write a &lt;code&gt;CommandLineRunner&lt;/code&gt; bean that is wrapped by using the Observation API and that sends a request to the server side. All parts of the API are described in more detail in the following snippet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;MyConfiguration.java&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@Configuration(proxyBeanMethods = false)
class MyConfiguration {
    @Bean
    CommandLineRunner myCommandLineRunner(ObservationRegistry registry, RestTemplate restTemplate) {
        Random highCardinalityValues = new Random(); // Simulates potentially large number of values
        List&amp;lt;String&amp;gt; lowCardinalityValues = Arrays.asList("userType1", "userType2", "userType3"); // Simulates low number of values
        return args -&amp;gt; {
            String highCardinalityUserId = String.valueOf(highCardinalityValues.nextLong(100_000));
            // Example of using the Observability API manually
            // &amp;lt;my.observation&amp;gt; is a "technical" name that does not depend on the context. It will be used to name e.g. Metrics
             Observation.createNotStarted("my.observation", registry)
                     // Low cardinality means that the number of potential values won't be big. Low cardinality entries will end up in e.g. Metrics
                    .lowCardinalityKeyValue("userType", randomUserTypePicker(lowCardinalityValues))
                     // High cardinality means that the number of potential values can be large. High cardinality entries will end up in e.g. Spans
                    .highCardinalityKeyValue("userId", highCardinalityUserId)
                     // &amp;lt;command-line-runner&amp;gt; is a "contextual" name that gives more details within the provided context. It will be used to name e.g. Spans
                    .contextualName("command-line-runner")
                     // The following lambda will be executed with an observation scope (e.g. all the MDC entries will be populated with tracing information). Also the observation will be started, stopped and if an error occurred it will be recorded on the observation
                    .observe(() -&amp;gt; {
                        log.info("Will send a request to the server"); // Since we're in an observation scope - this log line will contain tracing MDC entries ...
                        String response = restTemplate.getForObject("http://localhost:7654/user/{userId}", String.class, highCardinalityUserId); // Boot's RestTemplate instrumentation creates a child span here
                        log.info("Got response [{}]", response); // ... so will this line
                    });

        };
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="running-it-all-together"&gt;&lt;a class="anchor" href="#running-it-all-together"&gt;&lt;/a&gt;Running It All Together&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We have prepared a Docker setup of the whole observability infrastructure under &lt;a href="https://github.com/marcingrzejszczak/observability-boot-blog-post"&gt;this link&lt;/a&gt;. Follow these steps to run the infrastructure and both applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="running-the-samples"&gt;&lt;a class="anchor" href="#running-the-samples"&gt;&lt;/a&gt;Running the samples&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To run the samples:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="olist arabic"&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;Start up the observability stack (for demonstration purposes, you can use the provided Grafana, Tempo, and Loki stack) and wait for it to start.&lt;/p&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="bash"&gt;$ docker compose up&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To access Prometheus go to &lt;a href="http://localhost:9090/" class="bare"&gt;http://localhost:9090/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To access Grafana go to &lt;a href="http://localhost:3000/" class="bare"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the server side application (this will block your current terminal window).&lt;/p&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="bash"&gt;$ ./mvnw spring-boot:run -pl :server&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the client side application (this will block your current terminal window)&lt;/p&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="bash"&gt;$ ./mvnw spring-boot:run -pl :client&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You should see log statements similar to these:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code&gt;2022-10-04T15:04:55.345+02:00  INFO [client,bbe3aea006077640b66d40f3e62f04b9,93b7a150b7e293ef] 92556 --- [           main] com.example.client.ClientApplication     : Will send a request to the server
2022-10-04T15:04:55.385+02:00  INFO [client,bbe3aea006077640b66d40f3e62f04b9,93b7a150b7e293ef] 92556 --- [           main] com.example.client.ClientApplication     : Got response [foo]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;a href="http://localhost:3000/"&gt;Grafana&lt;/a&gt;, go to dashboards, and click on the &lt;code&gt;Logs, Traces, Metrics&lt;/code&gt; dashboard. There you can pick a trace ID value (for example, &lt;code&gt;bbe3aea006077640b66d40f3e62f04b9&lt;/code&gt;) to find all logs and traces from both applications that correspond to that trace ID. You should see a following correlated view of logs and traces related to the same trace identifier, and you will see metrics taking place at the same time range. The metrics are related to HTTP request processing latency. These come from the automated Spring Boot WebMvc instrumentation that uses the Micrometer API.&lt;/p&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/logs-metrics-traces.png" alt="logs metrics traces"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Notice a diamond shape in the metrics. These are &lt;a href="https://grafana.com/docs/grafana/latest/basics/exemplars/"&gt;&lt;code&gt;Exemplars&lt;/code&gt;&lt;/a&gt;. Those are &amp;#8220;specific trace representative of measurement taken in a given time interval&amp;#8221;. If you click on the shape, you can jump to the trace ID view to see the corresponding trace.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/exemplar.png" alt="exemplar"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Either click on the trace ID to &lt;code&gt;Query it with Tempo&lt;/code&gt; or go to Tempo and pick the trace identifier yourself. You will see the following screen.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/trace-view.png" alt="trace view"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Each bar represents a &lt;code&gt;span&lt;/code&gt;. You can see how much time it took for each operation to complete. If you click on a given span, you can see tags (key-value metadata) and timing information related to that particular operation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/span-tags.png" alt="span tags"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This is how the correlated logs view would look in Loki.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/correlated-logs.png" alt="correlated logs"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you want to see the &lt;code&gt;@Observed&lt;/code&gt; annotated method metrics, you can go to the &lt;code&gt;Prometheus&lt;/code&gt; view and find the &lt;code&gt;user_name&lt;/code&gt; Timer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/annotation-metric.png" alt="annotation metric"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you want to see the metrics from your Observation that you have manually created, go to the &lt;code&gt;Prometheus&lt;/code&gt; view and find the &lt;code&gt;my_observation&lt;/code&gt; Timer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/marcingrzejszczak/observability-boot-blog-post/main/docs/src/main/asciidoc/img/my-observation.png" alt="my observation"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="running-it-all-together-with-aot-support"&gt;&lt;a class="anchor" href="#running-it-all-together-with-aot-support"&gt;&lt;/a&gt;Running It All Together with AOT Support&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To better understand how Spring Boot supports Native, please read &lt;a href="https://spring.io/blog/2022/09/26/native-support-in-spring-boot-3-0-0-m5"&gt;this excellent blog post&lt;/a&gt;. We reuse that knowledge to run the previously created applications using Spring Native.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="building"&gt;&lt;a class="anchor" href="#building"&gt;&lt;/a&gt;Building&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To build the applications, you need GraalVM on your path. If you use &lt;code&gt;SDKMan&lt;/code&gt;, invoke the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;sdk install java 22.3.r17.ea-nik&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See also &lt;a href="https://www.graalvm.org/java/quickstart/"&gt;GraalVM Quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To build the application with Maven, you need to enable the &lt;code&gt;native&lt;/code&gt; profile:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;$ ./mvnw native:compile -Pnative&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="running"&gt;&lt;a class="anchor" href="#running"&gt;&lt;/a&gt;Running&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Run the server side application first&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;$ ./server/target/server&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Next, run the client side application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre&gt;$ ./client/target/client&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You should get output similar to this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;Client side logs&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre&gt;2022-10-10T12:57:17.712+02:00  INFO [client,,] 82009 --- [           main] com.example.client.ClientApplication     : Starting ClientApplication using Java 17.0.4 on marcin-precision5560 with PID 82009 (/home/marcin/repo/observability/blogs/bootRc1/client/target/client started by marcin in /home/marcin/repo/observability/blogs/bootRc1)
2022-10-10T12:57:17.712+02:00  INFO [client,,] 82009 --- [           main] com.example.client.ClientApplication     : No active profile set, falling back to 1 default profile: "default"
2022-10-10T12:57:17.723+02:00  INFO [client,,] 82009 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 6543 (http)
2022-10-10T12:57:17.723+02:00  INFO [client,,] 82009 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-10-10T12:57:17.723+02:00  INFO [client,,] 82009 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.0.23]
2022-10-10T12:57:17.727+02:00  INFO [client,,] 82009 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-10-10T12:57:17.727+02:00  INFO [client,,] 82009 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 15 ms
2022-10-10T12:57:17.731+02:00  WARN [client,,] 82009 --- [           main] i.m.c.i.binder.jvm.JvmGcMetrics          : GC notifications will not be available because MemoryPoolMXBeans are not provided by the JVM
2022-10-10T12:57:17.781+02:00  INFO [client,,] 82009 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 15 endpoint(s) beneath base path '/actuator'
2022-10-10T12:57:17.783+02:00  INFO [client,,] 82009 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 6543 (http) with context path ''
2022-10-10T12:57:17.783+02:00  INFO [client,,] 82009 --- [           main] com.example.client.ClientApplication     : Started ClientApplication in 0.077 seconds (process running for 0.079)
2022-10-10T12:57:17.784+02:00  INFO [client,27c1113e4276c4173daec3675f536bf4,e0f2db8b983607d8] 82009 --- [           main] com.example.client.ClientApplication     : Will send a request to the server
2022-10-10T12:57:17.820+02:00  INFO [client,27c1113e4276c4173daec3675f536bf4,e0f2db8b983607d8] 82009 --- [           main] com.example.client.ClientApplication     : Got response [foo]
2022-10-10T12:57:18.966+02:00  INFO [client,,] 82009 --- [nio-6543-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-10T12:57:18.966+02:00  INFO [client,,] 82009 --- [nio-6543-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-10-10T12:57:18.966+02:00  INFO [client,,] 82009 --- [nio-6543-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;Server side logs&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre&gt;2022-10-10T12:57:07.200+02:00  INFO [server,,] 81760 --- [           main] com.example.server.ServerApplication     : Starting ServerApplication using Java 17.0.4 on marcin-precision5560 with PID 81760 (/home/marcin/repo/observability/blogs/bootRc1/server/target/server started by marcin in /home/marcin/repo/observability/blogs/bootRc1)
2022-10-10T12:57:07.201+02:00  INFO [server,,] 81760 --- [           main] com.example.server.ServerApplication     : No active profile set, falling back to 1 default profile: "default"
2022-10-10T12:57:07.213+02:00  INFO [server,,] 81760 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7654 (http)
2022-10-10T12:57:07.213+02:00  INFO [server,,] 81760 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-10-10T12:57:07.213+02:00  INFO [server,,] 81760 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.0.23]
2022-10-10T12:57:07.217+02:00  INFO [server,,] 81760 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-10-10T12:57:07.217+02:00  INFO [server,,] 81760 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 16 ms
2022-10-10T12:57:07.222+02:00  WARN [server,,] 81760 --- [           main] i.m.c.i.binder.jvm.JvmGcMetrics          : GC notifications will not be available because MemoryPoolMXBeans are not provided by the JVM
2022-10-10T12:57:07.278+02:00  INFO [server,,] 81760 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 15 endpoint(s) beneath base path '/actuator'
2022-10-10T12:57:07.280+02:00  INFO [server,,] 81760 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7654 (http) with context path ''
2022-10-10T12:57:07.281+02:00  INFO [server,,] 81760 --- [           main] com.example.server.ServerApplication     : Started ServerApplication in 0.086 seconds (process running for 0.088)
2022-10-10T12:57:07.639+02:00  INFO [server,,] 81760 --- [nio-7654-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-10-10T12:57:07.639+02:00  INFO [server,,] 81760 --- [nio-7654-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-10-10T12:57:07.640+02:00  INFO [server,,] 81760 --- [nio-7654-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2022-10-10T12:57:17.785+02:00  INFO [server,,] 81760 --- [nio-7654-exec-8] com.example.server.MyHandler             : Before running the observation for context [http.server.requests]
2022-10-10T12:57:17.785+02:00  INFO [server,27c1113e4276c4173daec3675f536bf4,9affba5698490e2d] 81760 --- [nio-7654-exec-8] com.example.server.MyController          : Got a request
2022-10-10T12:57:17.820+02:00  INFO [server,,] 81760 --- [nio-7654-exec-8] com.example.server.MyHandler             : After running the observation for context [http.server.requests]&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can check Grafana for metrics, traces and logs!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="native-support-limitations"&gt;&lt;a class="anchor" href="#native-support-limitations"&gt;&lt;/a&gt;Native Support Limitations&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;On the client side, we need to provide the &lt;code&gt;reflect-config.js&lt;/code&gt; configuration manually. For more information, see &lt;a href="https://github.com/open-telemetry/opentelemetry-java/pull/4832"&gt;this PR&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="summary" class="sect0"&gt;&lt;a class="anchor" href="#summary"&gt;&lt;/a&gt;Summary&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In this blog post, we have managed to give you an introduction of the main concepts behind the Micrometer Observability API. We have also shown you how you can create observations by using the Observation API and annotations. You can also visualize the latency, see the correlated logs, and check the metrics that come from your Spring Boot applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You could also observe your applications by using native images with Spring Native.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="acknowledgments" class="sect0"&gt;&lt;a class="anchor" href="#acknowledgments"&gt;&lt;/a&gt;Acknowledgments&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Work on the Micrometer Observability would not be possible without the extensive support of the whole Spring team, &lt;a href="https://github.com/ttddyy/"&gt;Tadaya Tsuyukubo&lt;/a&gt;, &lt;a href="https://github.com/izeye"&gt;Johnny Lim&lt;/a&gt;, and all the other contributors and reviewers.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="next-steps" class="sect0"&gt;&lt;a class="anchor" href="#next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Based on community feedback, we will continue to improve our Observability story. We intend to go &lt;a href="https://github.com/micrometer-metrics/micrometer/milestone/177"&gt;GA in November this year&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This is an exciting time for us. We would again like to thank everyone who has already contributed and reported feedback, and we look forward to further feedback! Check out Spring Boot&amp;#8217;s latest snapshots! Check out the documentation of our projects: &lt;a href="https://micrometer.io/docs/contextPropagation"&gt;Micrometer Context Propagation&lt;/a&gt;, &lt;a href="https://micrometer.io/docs"&gt;Micrometer&lt;/a&gt;, &lt;a href="https://micrometer.io/docs/observation"&gt;Micrometer Observation&lt;/a&gt;, &lt;a href="https://micrometer.io/docs/tracing"&gt;Micrometer Tracing&lt;/a&gt; and &lt;a href="https://micrometer.io/docs/observation#_documentation_building"&gt;Micrometer Docs Generator&lt;/a&gt;! Click &lt;a href="https://github.com/marcingrzejszczak/observability-boot-blog-post"&gt;here&lt;/a&gt; to see the code used for this blog post.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
</feed>
